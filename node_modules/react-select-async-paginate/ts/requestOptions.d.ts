import type { MutableRefObject } from 'react';
import type { GroupBase } from 'react-select';
import type { OptionsCache, UseAsyncPaginateBaseParams, ReduceOptions, RequestOptionsCallerType } from './types';
declare type MapOptionsCache<OptionType, Group extends GroupBase<OptionType>, Additional> = (prevCache: OptionsCache<OptionType, Group, Additional>) => OptionsCache<OptionType, Group, Additional>;
declare type SetOptionsCache<OptionType, Group extends GroupBase<OptionType>, Additional> = (stateMapper: MapOptionsCache<OptionType, Group, Additional>) => void;
export declare const requestOptions: <OptionType, Group extends GroupBase<OptionType>, Additional>(caller: RequestOptionsCallerType, paramsRef: MutableRefObject<UseAsyncPaginateBaseParams<OptionType, Group, Additional>>, optionsCacheRef: MutableRefObject<OptionsCache<OptionType, Group, Additional>>, debounceTimeout: number, setOptionsCache: SetOptionsCache<OptionType, Group, Additional>, reduceOptions: ReduceOptions<OptionType, Group, Additional>) => Promise<void>;
export {};
