"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.requestOptions = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _toPropertyKey2 = _interopRequireDefault(require("@babel/runtime/helpers/toPropertyKey"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectSpread6 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _sleepPromise = _interopRequireDefault(require("sleep-promise"));

var _getInitialCache = require("./getInitialCache");

var _validateResponse = require("./validateResponse");

var requestOptions = /*#__PURE__*/function () {
  var _ref = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(caller, paramsRef, optionsCacheRef, debounceTimeout, setOptionsCache, reduceOptions) {
    var currentInputValue, isCacheEmpty, currentOptions, newInputValue, response, hasError, loadOptions, _response, options, hasMore, newAdditional;

    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            currentInputValue = paramsRef.current.inputValue;
            isCacheEmpty = !optionsCacheRef.current[currentInputValue];
            currentOptions = isCacheEmpty ? (0, _getInitialCache.getInitialCache)(paramsRef.current) : optionsCacheRef.current[currentInputValue];

            if (!(currentOptions.isLoading || !currentOptions.hasMore)) {
              _context.next = 5;
              break;
            }

            return _context.abrupt("return");

          case 5:
            setOptionsCache(function (prevOptionsCache) {
              return (0, _objectSpread6["default"])((0, _objectSpread6["default"])({}, prevOptionsCache), {}, (0, _defineProperty2["default"])({}, currentInputValue, (0, _objectSpread6["default"])((0, _objectSpread6["default"])({}, currentOptions), {}, {
                isLoading: true
              })));
            });

            if (!(debounceTimeout > 0 && caller === 'input-change')) {
              _context.next = 13;
              break;
            }

            _context.next = 9;
            return (0, _sleepPromise["default"])(debounceTimeout);

          case 9:
            newInputValue = paramsRef.current.inputValue;

            if (!(currentInputValue !== newInputValue)) {
              _context.next = 13;
              break;
            }

            setOptionsCache(function (prevOptionsCache) {
              if (isCacheEmpty) {
                var itemForDelete = prevOptionsCache[currentInputValue],
                    restCache = (0, _objectWithoutProperties2["default"])(prevOptionsCache, [currentInputValue].map(_toPropertyKey2["default"]));
                return restCache;
              }

              return (0, _objectSpread6["default"])((0, _objectSpread6["default"])({}, prevOptionsCache), {}, (0, _defineProperty2["default"])({}, currentInputValue, (0, _objectSpread6["default"])((0, _objectSpread6["default"])({}, currentOptions), {}, {
                isLoading: false
              })));
            });
            return _context.abrupt("return");

          case 13:
            hasError = false;
            _context.prev = 14;
            loadOptions = paramsRef.current.loadOptions;
            _context.next = 18;
            return loadOptions(currentInputValue, currentOptions.options, currentOptions.additional);

          case 18:
            response = _context.sent;
            _context.next = 24;
            break;

          case 21:
            _context.prev = 21;
            _context.t0 = _context["catch"](14);
            hasError = true;

          case 24:
            if (!hasError) {
              _context.next = 27;
              break;
            }

            setOptionsCache(function (prevOptionsCache) {
              return (0, _objectSpread6["default"])((0, _objectSpread6["default"])({}, prevOptionsCache), {}, (0, _defineProperty2["default"])({}, currentInputValue, (0, _objectSpread6["default"])((0, _objectSpread6["default"])({}, currentOptions), {}, {
                isLoading: false
              })));
            });
            return _context.abrupt("return");

          case 27:
            if ((0, _validateResponse.validateResponse)(response)) {
              _response = response, options = _response.options, hasMore = _response.hasMore; // eslint-disable-next-line no-prototype-builtins

              newAdditional = response.hasOwnProperty('additional') ? response.additional : currentOptions.additional;
              setOptionsCache(function (prevOptionsCache) {
                return (0, _objectSpread6["default"])((0, _objectSpread6["default"])({}, prevOptionsCache), {}, (0, _defineProperty2["default"])({}, currentInputValue, (0, _objectSpread6["default"])((0, _objectSpread6["default"])({}, currentOptions), {}, {
                  options: reduceOptions(currentOptions.options, options, newAdditional),
                  hasMore: !!hasMore,
                  isLoading: false,
                  isFirstLoad: false,
                  additional: newAdditional
                })));
              });
            }

          case 28:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[14, 21]]);
  }));

  return function requestOptions(_x, _x2, _x3, _x4, _x5, _x6) {
    return _ref.apply(this, arguments);
  };
}();

exports.requestOptions = requestOptions;