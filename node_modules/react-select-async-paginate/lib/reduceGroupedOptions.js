"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.reduceGroupedOptions = exports.checkGroup = void 0;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));

var checkGroup = function checkGroup(group) {
  if (!group) {
    return false;
  }

  var _ref = group,
      label = _ref.label,
      options = _ref.options;

  if (typeof label !== 'string' && typeof label !== 'undefined') {
    return false;
  }

  if (!Array.isArray(options)) {
    return false;
  }

  return true;
};

exports.checkGroup = checkGroup;

var reduceGroupedOptions = function reduceGroupedOptions(prevOptions, loadedOptions) {
  var res = prevOptions.slice();
  var mapLabelToIndex = {};
  var prevOptionsIndex = 0;
  var prevOptionsLength = prevOptions.length;
  loadedOptions.forEach(function (optionOrGroup) {
    var group = checkGroup(optionOrGroup) ? optionOrGroup : {
      options: [optionOrGroup]
    };
    var _group$label = group.label,
        label = _group$label === void 0 ? '' : _group$label;
    var groupIndex = mapLabelToIndex[label];

    if (typeof groupIndex !== 'number') {
      for (; prevOptionsIndex < prevOptionsLength && typeof mapLabelToIndex[label] !== 'number'; ++prevOptionsIndex) {
        var prevGroup = prevOptions[prevOptionsIndex];

        if (checkGroup(prevGroup)) {
          mapLabelToIndex[prevGroup.label || ''] = prevOptionsIndex;
        }
      }

      groupIndex = mapLabelToIndex[label];
    }

    if (typeof groupIndex !== 'number') {
      mapLabelToIndex[label] = res.length;
      res.push(group);
      return;
    }

    res[groupIndex] = (0, _objectSpread2["default"])((0, _objectSpread2["default"])({}, res[groupIndex]), {}, {
      options: [].concat((0, _toConsumableArray2["default"])(res[groupIndex].options), (0, _toConsumableArray2["default"])(group.options))
    });
  });
  return res;
};

exports.reduceGroupedOptions = reduceGroupedOptions;