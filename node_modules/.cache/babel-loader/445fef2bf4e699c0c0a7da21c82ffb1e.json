{"ast":null,"code":"var _jsxFileName = \"/Users/rajesh/Downloads/weather-app/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport Search from \"./component/search/search\";\nimport CurrentWeather from \"./component/current-weather/current-weather\";\nimport { WEATHER_API_URL, WEATHER_API_KEY } from \"./api\";\nimport { useState } from \"react\";\nimport ForeCast from \"./component/forecast/forecast\";\nimport heart from \"../src/component/icons/love.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentWeather, setcurrentWeather] = useState(null);\n  const [forecast, setForeCast] = useState(null);\n  const handleOnSearchChange = searchData => {\n    const [lat, lon] = searchData.value.split(\" \");\n    const currentWeatherFetch = fetch(`${WEATHER_API_URL}weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`);\n    const forecastFetch = fetch(`${WEATHER_API_URL}forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`);\n    Promise.all([currentWeatherFetch, forecastFetch]).then(async response => {\n      const weatherResponse = await response[0].json();\n      const forecastResponse = await response[1].json();\n      setcurrentWeather({\n        city: searchData.label,\n        ...weatherResponse\n      });\n      setForeCast({\n        city: searchData.label,\n        ...forecastResponse\n      });\n    }).catch(err => console.log(err));\n  };\n  console.log(currentWeather);\n  console.log(forecast);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: [\"Made with\", \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: heart,\n        style: {\n          width: \"5%\",\n          height: \"6%\"\n        },\n        alt: \"heart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), \" by\", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://rajesh24.netlify.app/\",\n        className: \"myName\",\n        children: [\" \", \"( Rajesh R )\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"click here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        marginTop: \"5%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        onSearchChange: handleOnSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), currentWeather && /*#__PURE__*/_jsxDEV(CurrentWeather, {\n        data: currentWeather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 28\n      }, this), forecast && /*#__PURE__*/_jsxDEV(ForeCast, {\n        data: forecast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"eE0dZLJB+RZTXMWMw1kdtfAWEdU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Search","CurrentWeather","WEATHER_API_URL","WEATHER_API_KEY","useState","ForeCast","heart","App","currentWeather","setcurrentWeather","forecast","setForeCast","handleOnSearchChange","searchData","lat","lon","value","split","currentWeatherFetch","fetch","forecastFetch","Promise","all","then","response","weatherResponse","json","forecastResponse","city","label","catch","err","console","log","width","height","marginTop"],"sources":["/Users/rajesh/Downloads/weather-app/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport Search from \"./component/search/search\";\nimport CurrentWeather from \"./component/current-weather/current-weather\";\nimport { WEATHER_API_URL, WEATHER_API_KEY } from \"./api\";\nimport { useState } from \"react\";\nimport ForeCast from \"./component/forecast/forecast\";\nimport heart from \"../src/component/icons/love.png\";\n\nfunction App() {\n  const [currentWeather, setcurrentWeather] = useState(null);\n  const [forecast, setForeCast] = useState(null);\n\n  const handleOnSearchChange = (searchData) => {\n    const [lat, lon] = searchData.value.split(\" \");\n\n    const currentWeatherFetch = fetch(\n      `${WEATHER_API_URL}weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`\n    );\n\n    const forecastFetch = fetch(\n      `${WEATHER_API_URL}forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`\n    );\n\n    Promise.all([currentWeatherFetch, forecastFetch])\n      .then(async (response) => {\n        const weatherResponse = await response[0].json();\n        const forecastResponse = await response[1].json();\n\n        setcurrentWeather({ city: searchData.label, ...weatherResponse });\n        setForeCast({ city: searchData.label, ...forecastResponse });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  console.log(currentWeather);\n  console.log(forecast);\n\n  return (\n    <>\n      <div className=\"footer\">\n        Made with{\" \"}\n        <img src={heart} style={{ width: \"5%\", height: \"6%\" }} alt=\"heart\" /> by\n        <a href=\"https://rajesh24.netlify.app/\" className=\"myName\">\n          {\" \"}\n          ( Rajesh R )<span>click here...</span>\n        </a>\n      </div>\n      <div className=\"container\" style={{ marginTop: \"5%\" }}>\n        <Search onSearchChange={handleOnSearchChange} />\n        {currentWeather && <CurrentWeather data={currentWeather} />}\n        {forecast && <ForeCast data={forecast} />}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,2BAA2B;AAC9C,OAAOC,cAAc,MAAM,6CAA6C;AACxE,SAASC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACxD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,+BAA+B;AACpD,OAAOC,KAAK,MAAM,iCAAiC;AAAC;AAAA;AAEpD,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMQ,oBAAoB,GAAIC,UAAU,IAAK;IAC3C,MAAM,CAACC,GAAG,EAAEC,GAAG,CAAC,GAAGF,UAAU,CAACG,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC;IAE9C,MAAMC,mBAAmB,GAAGC,KAAK,CAC9B,GAAEjB,eAAgB,eAAcY,GAAI,QAAOC,GAAI,UAASZ,eAAgB,eAAc,CACxF;IAED,MAAMiB,aAAa,GAAGD,KAAK,CACxB,GAAEjB,eAAgB,gBAAeY,GAAI,QAAOC,GAAI,UAASZ,eAAgB,eAAc,CACzF;IAEDkB,OAAO,CAACC,GAAG,CAAC,CAACJ,mBAAmB,EAAEE,aAAa,CAAC,CAAC,CAC9CG,IAAI,CAAC,MAAOC,QAAQ,IAAK;MACxB,MAAMC,eAAe,GAAG,MAAMD,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,EAAE;MAChD,MAAMC,gBAAgB,GAAG,MAAMH,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,EAAE;MAEjDjB,iBAAiB,CAAC;QAAEmB,IAAI,EAAEf,UAAU,CAACgB,KAAK;QAAE,GAAGJ;MAAgB,CAAC,CAAC;MACjEd,WAAW,CAAC;QAAEiB,IAAI,EAAEf,UAAU,CAACgB,KAAK;QAAE,GAAGF;MAAiB,CAAC,CAAC;IAC9D,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACrC,CAAC;EAEDC,OAAO,CAACC,GAAG,CAACzB,cAAc,CAAC;EAC3BwB,OAAO,CAACC,GAAG,CAACvB,QAAQ,CAAC;EAErB,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,QAAQ;MAAA,wBACX,GAAG,eACb;QAAK,GAAG,EAAEJ,KAAM;QAAC,KAAK,EAAE;UAAE4B,KAAK,EAAE,IAAI;UAAEC,MAAM,EAAE;QAAK,CAAE;QAAC,GAAG,EAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAG,sBACrE;QAAG,IAAI,EAAC,+BAA+B;QAAC,SAAS,EAAC,QAAQ;QAAA,WACvD,GAAG,+BACQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA0B;MAAA;QAAA;QAAA;QAAA;MAAA,QACpC;IAAA;MAAA;MAAA;MAAA;IAAA,QACA,eACN;MAAK,SAAS,EAAC,WAAW;MAAC,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAK,CAAE;MAAA,wBACpD,QAAC,MAAM;QAAC,cAAc,EAAExB;MAAqB;QAAA;QAAA;QAAA;MAAA,QAAG,EAC/CJ,cAAc,iBAAI,QAAC,cAAc;QAAC,IAAI,EAAEA;MAAe;QAAA;QAAA;QAAA;MAAA,QAAG,EAC1DE,QAAQ,iBAAI,QAAC,QAAQ;QAAC,IAAI,EAAEA;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACrC;EAAA,gBACL;AAEP;AAAC,GA9CQH,GAAG;AAAA,KAAHA,GAAG;AAgDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}